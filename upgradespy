#!/usr/bin/env bash
#Copyright (C) 2015  Helal Uddin <helal00 at gmail.com>
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.

_srcsbinpath=$(dirname $(readlink -f $0))

declare -a _requiredfiles
declare -a _requiredexefiles

_requiredfiles[${#_requiredfiles[@]}]="functions"
_requiredexefiles[${#_requiredexefiles[@]}]="getgitrepo"
_requiredexefiles[${#_requiredexefiles[@]}]="githublatest"
_requiredexefiles[${#_requiredexefiles[@]}]="sflatest"
_requiredexefiles[${#_requiredexefiles[@]}]="timeout3"

if [ ! -z "$_srcsbinpath" ] ; then
	if [ -s "$_srcsbinpath/resolve" ] ; then
		. $_srcsbinpath/resolve	
	else
		echo "$_srcsbinpath/resolve file not found!" 1>&2
		exit 1
	fi
fi

echo "Querying installed.db file......."
if [ ! -f "$_srcsbinpath/installed.db" ] ; then
	echo "No installed.db present is the dir $_srcsbinpath" 1>&2
else
	readarray _upgradeline < "$_srcsbinpath/installed.db"
	for _upln in "${_upgradeline[@]}"
	do
		if [ "${_upln:0:1}" = "#" ] ; then
			continue
		fi

		strtoarry "$_upln" "_pparts" '*\*\*'

		if [ ${#_pparts[@]} -ne 2 ] ; then
			continue
		fi
		
		_url=${_pparts[0]#*://}

		strtoarry "$_url" "_urlparts" '\/'
		if [ ${#_urlparts[@]} -lt 3 ] ; then
			continue
		fi

		echo "Package: ${_urlparts[2]}:"
		echo "============================================================="
		echo "Currently Installed:"
		echo "$(eval ${_pparts[1]} 2>&1)"
		echo "Latest Version and URL: "
		if echo "${_urlparts[0]}" | grep -q "sourceforge.net" ; then
			"$_sflatest" "both" "${_pparts[0]}"
		elif echo "${_urlparts[0]}" | grep -q "github.com" ; then
			"$_githublatest" "both" "${_pparts[0]}"
		fi
		echo "============================================================="
	done
fi

echo "Querying apt-get ......."
if "$_timeout3" -t 15 sudo echo ; then
	_aptloc=$(command -v apt-get)
	if [ ! -z "$_aptloc" ] ; then
		echo "Available system updrages by apt-get:"
		echo "============================================================="
		sudo "$_aptloc" update 1>/dev/null
		sudo "$_aptloc" upgrade -s
	fi
fi



